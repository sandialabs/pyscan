# This workflow will auto-version when pull-requests are merged to main.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Version Before Release

on:
  workflow_dispatch:
      
permissions:
  contents: write

jobs:
  auto_versioning:
      runs-on: ubuntu-latest

      steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      # try to pull from main here, just the version and changelog files if possible, always reset to these with each push then version and it will work.
      # this will likely need to be changed to Andy's info and token now that I am no longer an admin.
      - name: Pull From Main
        run: |
          git --version
          git config --global user.name "rsbrost"
          git config --global user.email "rsbrost@sandia.gov"
          git remote set-url origin https://${{ secrets.REPO_TOKEN_SECRET }}@github.com/${{ github.repository }}
          git status
          git fetch
          
          git rm CHANGELOG.md
          git rm VERSION.json
          git status
          git add .
          git commit -m "Pulled latest CHANGELOG.md and VERSION.json from main." || echo "Nothing to commit."
          git push || echo "Nothing to push."
          
          git checkout origin/main CHANGELOG.md
          git checkout origin/main VERSION.json
          git status
          git add .
          git commit -m "Pulled latest CHANGELOG.md and VERSION.json from main." || echo "Nothing to commit."
          git push || echo "Nothing to push."
          
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.2.1
        with:
          git-user-name: "rsbrost"
          git-user-email: "rsbrost@sandia.gov"
          github-token: ${{ secrets.REPO_TOKEN_SECRET }}
          version-file: "VERSION.json"
          release-count: '30'
          git-branch: ${{ github.event.pull_request.head.ref }}

      - name: Delete Tag Pre-Release
        if: steps.changelog.outputs.tag != ''
        run: git push --delete origin ${{ steps.changelog.outputs.tag }}
